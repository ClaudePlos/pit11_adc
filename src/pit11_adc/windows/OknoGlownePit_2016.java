/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package pit11_adc.windows;

import au.com.bytecode.opencsv.CSVReader;
import java.io.*;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author k.skowronski
 */
public class OknoGlownePit_2016 extends javax.swing.JFrame {

    /**
     * Creates new form OknoGlownePit v23 pit
     */
    
    
    private JFileChooser fc=new JFileChooser(".");
    private String msg;
    
    
    
    public OknoGlownePit_2016() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttOpenFile = new javax.swing.JToggleButton();
        tableMSG = new javax.swing.JScrollPane();
        tabMSG = new javax.swing.JTable();
        msgLiczbaRow = new javax.swing.JLabel();
        butGenXML = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1294, 510));
        setResizable(false);

        jLabel1.setText("ADC Pit 2017(za 16)");

        buttOpenFile.setText("Otwórz CSV");
        buttOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttOpenFileActionPerformed(evt);
            }
        });

        tabMSG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMSG.setViewportView(tabMSG);

        msgLiczbaRow.setText("Wierszy: 0");

        butGenXML.setText("Generuj XML");
        butGenXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGenXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableMSG, javax.swing.GroupLayout.DEFAULT_SIZE, 1385, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttOpenFile)
                        .addGap(18, 18, 18)
                        .addComponent(butGenXML))
                    .addComponent(msgLiczbaRow))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttOpenFile)
                    .addComponent(butGenXML))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableMSG, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgLiczbaRow)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttOpenFileActionPerformed
       
        
        
        // 01 - Wskazuje ścieżeka do pliku
        
        BufferedReader file_in = null;
            msg = "";
            
            if(fc.showOpenDialog(this)!=JFileChooser.APPROVE_OPTION)
            {
                return;
            }
            File file=fc.getSelectedFile();
            
            try {
              // file_in  = new BufferedReader(new FileReader(fc.getSelectedFile().getPath()));  
 
                file_in  = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF8"));
                
            } catch (Exception e) {
                 throw new RuntimeException("Nie mogę pobrać pliku");
            }
         
            
            
            
            //************* KS opis po przerobieniu pliku exela do csv, zaczytuję do programu i przerabiam na xmle.
            // KS - zmiana pod rok 2013 - add 2014-02-10
            // KS - 2014-07-04 Źle zdefiniowałem pozycje 67 -- zamiana "<P_67>" na "<P_68>"
            // csv oddzielone ;
            // pit-11 wersja 20 na rok 2013
            // !!!! zwracaj uwagę na kod urzedu !!!!!
            
            // KS - pit-11 wersja 21 na rok 2014
            
            // KS - pit-11 wersja 23 za rok 2015
            
            
            //02 - przesyłam dane do testArena MSG
            
            
            
            try {
            //CSVReader reader = new CSVReader(new FileReader( file ), ';'); 
            CSVReader reader = new CSVReader(new InputStreamReader(new FileInputStream( file ),"UTF-8"),';');
            
            List myEntries = reader.readAll();
            
            
        Object[][] dokLst = new Object[myEntries.size()][1];
        
        msgLiczbaRow.setText( "Wierszy: " + myEntries.size());
        
        for ( int i = 0; i < myEntries.size(); i++ )
        {
               Object p00         =    ((Object[]) myEntries.get(i))[0]; 
               Object p01         =    ((Object[]) myEntries.get(i))[1];
               Object p02         =    ((Object[]) myEntries.get(i))[2];
               Object p03         =    ((Object[]) myEntries.get(i))[3];
               Object p04         =    ((Object[]) myEntries.get(i))[4];
               Object p05         =    ((Object[]) myEntries.get(i))[5];
               Object p06         =    ((Object[]) myEntries.get(i))[6];
               Object p07         =    ((Object[]) myEntries.get(i))[7];
               Object p08         =    ((Object[]) myEntries.get(i))[8];
               Object p09         =    ((Object[]) myEntries.get(i))[9];
               Object p10         =    ((Object[]) myEntries.get(i))[10];
               Object p11         =    ((Object[]) myEntries.get(i))[11];
               Object p12         =    ((Object[]) myEntries.get(i))[12];
               Object p13         =    ((Object[]) myEntries.get(i))[13];
               Object p14         =    ((Object[]) myEntries.get(i))[14];
               Object p15         =    ((Object[]) myEntries.get(i))[15];
               Object p16         =    ((Object[]) myEntries.get(i))[16];
               Object p17         =    ((Object[]) myEntries.get(i))[17];
               Object p18         =    ((Object[]) myEntries.get(i))[18];
               Object p19         =    ((Object[]) myEntries.get(i))[19];
               Object p20         =    ((Object[]) myEntries.get(i))[20];
               Object p21         =    ((Object[]) myEntries.get(i))[21];
               Object p22         =    ((Object[]) myEntries.get(i))[22];
               Object p23         =    ((Object[]) myEntries.get(i))[23];
               Object p24         =    ((Object[]) myEntries.get(i))[24];
               Object p25         =    ((Object[]) myEntries.get(i))[25];
               Object p26         =    ((Object[]) myEntries.get(i))[26];
               Object p27         =    ((Object[]) myEntries.get(i))[27];
               Object p28         =    ((Object[]) myEntries.get(i))[28];
               Object p29         =    ((Object[]) myEntries.get(i))[29];
               Object p30         =    ((Object[]) myEntries.get(i))[30];
               Object p31         =    ((Object[]) myEntries.get(i))[31];
               Object p32         =    ((Object[]) myEntries.get(i))[32];
               Object p33         =    ((Object[]) myEntries.get(i))[33];
               Object p34         =    ((Object[]) myEntries.get(i))[34];
               Object p35         =    ((Object[]) myEntries.get(i))[35];
               Object p36         =    ((Object[]) myEntries.get(i))[36];
               Object p37         =    ((Object[]) myEntries.get(i))[37];
               Object p38         =    ((Object[]) myEntries.get(i))[38];
               Object p39         =    ((Object[]) myEntries.get(i))[39];
               Object p40         =    ((Object[]) myEntries.get(i))[40];
               Object p41         =    ((Object[]) myEntries.get(i))[41];
               Object p42         =    ((Object[]) myEntries.get(i))[42];
               Object p43         =    ((Object[]) myEntries.get(i))[43];
               Object p44         =    ((Object[]) myEntries.get(i))[44];
               Object p45         =    ((Object[]) myEntries.get(i))[45];
               Object p46         =    ((Object[]) myEntries.get(i))[46];
               Object p47         =    ((Object[]) myEntries.get(i))[47];
               Object p48         =    ((Object[]) myEntries.get(i))[48];
               Object p49         =    ((Object[]) myEntries.get(i))[49];
               Object p50         =    ((Object[]) myEntries.get(i))[50];
               Object p51         =    ((Object[]) myEntries.get(i))[51];
               Object p52         =    ((Object[]) myEntries.get(i))[52];
               Object p53         =    ((Object[]) myEntries.get(i))[53];
               Object p54         =    ((Object[]) myEntries.get(i))[54];
               Object p55         =    ((Object[]) myEntries.get(i))[55];
               Object p56         =    ((Object[]) myEntries.get(i))[56];
               Object p57         =    ((Object[]) myEntries.get(i))[57];
               Object p58         =    ((Object[]) myEntries.get(i))[58];
               Object p59         =    ((Object[]) myEntries.get(i))[59];
               Object p60         =    ((Object[]) myEntries.get(i))[60];
               Object p61         =    ((Object[]) myEntries.get(i))[61];
               Object p62         =    ((Object[]) myEntries.get(i))[62];
               Object p63         =    ((Object[]) myEntries.get(i))[63];
               Object p64         =    ((Object[]) myEntries.get(i))[64];
               Object p65         =    ((Object[]) myEntries.get(i))[65];
               Object p66         =    ((Object[]) myEntries.get(i))[66];
               Object p67         =    ((Object[]) myEntries.get(i))[67];
        
               
               
               

            Object[] dok = {p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20
                               ,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34
                               ,p35,p36,p37,p38,p39
                               ,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49
                               ,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59
                               ,p60,p61,p62,p63,p64,p65,p66,p67
                            };
            dokLst[i] = dok; 
            
            
           
            
            // wyswietlam
        Vector<String> tableHeaders = new Vector<String>();
        
        tableHeaders.add("00");
        tableHeaders.add("01");tableHeaders.add("02");tableHeaders.add("03");tableHeaders.add("04");tableHeaders.add("05");
        tableHeaders.add("06");tableHeaders.add("07");tableHeaders.add("08");tableHeaders.add("09");tableHeaders.add("10");
        tableHeaders.add("11");tableHeaders.add("12");tableHeaders.add("13");tableHeaders.add("14");tableHeaders.add("15");
        tableHeaders.add("16");tableHeaders.add("17");tableHeaders.add("18");tableHeaders.add("19");tableHeaders.add("20");
        tableHeaders.add("21");tableHeaders.add("22");tableHeaders.add("23");tableHeaders.add("24");tableHeaders.add("25");
        tableHeaders.add("26");tableHeaders.add("27");tableHeaders.add("28");tableHeaders.add("29");tableHeaders.add("30");
        tableHeaders.add("31");tableHeaders.add("32");tableHeaders.add("33");tableHeaders.add("34");tableHeaders.add("35");
        tableHeaders.add("36");tableHeaders.add("37");tableHeaders.add("38");tableHeaders.add("39")
       ;tableHeaders.add("40");tableHeaders.add("41");tableHeaders.add("42");tableHeaders.add("43");tableHeaders.add("44");tableHeaders.add("45")
       ;tableHeaders.add("46");tableHeaders.add("47");tableHeaders.add("48");tableHeaders.add("49")
       ;tableHeaders.add("50");tableHeaders.add("51");tableHeaders.add("52");tableHeaders.add("53");tableHeaders.add("54");tableHeaders.add("55")
       ;tableHeaders.add("56");tableHeaders.add("57");tableHeaders.add("58");tableHeaders.add("59")
       ;tableHeaders.add("60");tableHeaders.add("61");tableHeaders.add("62");tableHeaders.add("63");tableHeaders.add("64");tableHeaders.add("65")
       ;tableHeaders.add("66");tableHeaders.add("67")
               ;
            
            tabMSG.setModel(new DefaultTableModel( ( Object[][]) dokLst, tableHeaders.toArray() ));
                    
        }             
                    //new JTable(myEntries.toArray()));
            
//            /String test = myEntries.get(1).toString();
            
            // tabelaDokumentow = myEntries.toArray();
        } catch (IOException ex) {
            Logger.getLogger(OknoGlownePit_2016.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
            
        
        
    }//GEN-LAST:event_buttOpenFileActionPerformed

    private void butGenXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGenXMLActionPerformed
       
        
        try {
                String fileLines = null;
                Writer out2;
                String plikNazwa = null;
                
                for ( int i = 0; i < tabMSG.getRowCount(); i++ )
                {
                       //System.out.println("START");
                           
                       plikNazwa = tabMSG.getModel().getValueAt(i, 5).toString();
                       
                       if ( !tabMSG.getModel().getValueAt(i, 6).toString().equals("") )
                       {
                          plikNazwa =  tabMSG.getModel().getValueAt(i, 6).toString().replace("-", "");
                       }
                       
                       msg =       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + '\n';
                       msg = msg + "<Deklaracja xmlns=\"http://crd.gov.pl/wzor/2016/01/11/3066/\">" + '\n';
                       msg = msg + "<Naglowek>" + '\n';
                       msg = msg + "<KodFormularza kodPodatku=\"PIT\" kodSystemowy=\"PIT-11 (23)\" rodzajZobowiazania=\"Z\" wersjaSchemy=\"1-0E\">PIT-11</KodFormularza>" + '\n';
                       msg = msg + "<WariantFormularza>23</WariantFormularza>" + '\n';
                       msg = msg + "<CelZlozenia poz=\"P_6\">1</CelZlozenia>" + '\n'; /// KS - add - 2014-07-04 Jeżeli Korekta to dajemy 2. Zwykłe 1
                       msg = msg + "<Rok>2016</Rok>" + '\n';
                       msg = msg + "<KodUrzedu>" + tabMSG.getModel().getValueAt(i, 3) + "</KodUrzedu>" + '\n';
                       msg = msg + "</Naglowek>" + '\n';
                       msg = msg + "<Podmiot1 rola=\"Płatnik\">" + '\n';;       
                       msg = msg + "<OsobaNiefizyczna xmlns:etd=\"http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2011/06/21/eD/DefinicjeTypy/\">" + '\n';
                       msg = msg + "<etd:NIP>9451979723</etd:NIP>" + '\n';
                       msg = msg + "<etd:PelnaNazwa>HOTELE ADC SPÓŁKA Z OGRANICZONĄ ODPOWIEDZIALNOŚCIĄ</etd:PelnaNazwa>" + '\n';
                       msg = msg + "<etd:REGON>356571563</etd:REGON>" + '\n';
                       msg = msg + "</OsobaNiefizyczna>" + '\n';
                      /* msg = msg + "<AdresZamieszkaniaSiedziby rodzajAdresu=\"RAD\">" + '\n';
                       msg = msg + "<etd:AdresPol>" + '\n';
                       msg = msg + "<etd:KodKraju>PL</etd:KodKraju>" + '\n';
                       msg = msg + "<etd:Wojewodztwo>MAŁOPOLSKIE</etd:Wojewodztwo>" + '\n';
                       msg = msg + "<etd:Powiat>Kraków</etd:Powiat>" + '\n';
                       msg = msg + "<etd:Gmina>Kraków</etd:Gmina>" + '\n';
                       msg = msg + "<etd:Ulica>Żabiniec</etd:Ulica>" + '\n';
                       msg = msg + "<etd:NrDomu>46</etd:NrDomu>" + '\n';
                       msg = msg + "<etd:Miejscowosc>Kraków</etd:Miejscowosc>" + '\n';
                       msg = msg + "<etd:KodPocztowy>31-215</etd:KodPocztowy>" + '\n';
                       msg = msg + "<etd:Poczta>Kraków</etd:Poczta>" + '\n';
                       msg = msg + "</etd:AdresPol>" + '\n';
                       msg = msg + "</AdresZamieszkaniaSiedziby>" + '\n';*/ //adres wywalamy, było potrzebne do 2012
                       msg = msg + "</Podmiot1>" + '\n';
                       msg = msg + "<Podmiot2 rola=\"Podatnik\">" + '\n';
                       msg = msg + "<OsobaFizyczna>" + '\n';
                       
                       if ( tabMSG.getModel().getValueAt(i, 5).toString().equals("") ) // jeżeli brak peselu to wysyłamy nip
                       {
                          msg = msg + "<NIP>" + tabMSG.getModel().getValueAt(i, 6).toString().replace("-", "") + "</NIP>" + '\n'; 
                       }
                       else 
                       {
                          msg = msg + "<PESEL>" + tabMSG.getModel().getValueAt(i, 5) + "</PESEL>" + '\n';  
                       }
                       
                       
                       msg = msg + "<ImiePierwsze>" + tabMSG.getModel().getValueAt(i, 8) + "</ImiePierwsze>" + '\n';
                       msg = msg + "<Nazwisko>" + tabMSG.getModel().getValueAt(i, 7) + "</Nazwisko>" + '\n';
                       
                       // w zależności jak prześle ale data powinna być w formacie YYYY-MM-DD
                       msg = msg + "<DataUrodzenia>" + tabMSG.getModel().getValueAt(i, 9).toString().substring(0, 4) + "-" 
                                                     + tabMSG.getModel().getValueAt(i, 9).toString().substring(5, 7) + "-" 
                                                     + tabMSG.getModel().getValueAt(i, 9).toString().substring(8, 10) + 
                               "</DataUrodzenia>" + '\n';
                       //msg = msg + "<DataUrodzenia>" + tabMSG.getModel().getValueAt(i, 9) + "</DataUrodzenia>" + '\n';
                       
                       msg = msg + "</OsobaFizyczna>" + '\n';
                       msg = msg + "<AdresZamieszkania rodzajAdresu=\"RAD\">" + '\n';
                       //msg = msg + "<AdresPol>" + '\n';
                       msg = msg + "<KodKraju poz=\"P_18A\">PL</KodKraju>" + '\n';
                       msg = msg + "<Wojewodztwo>" + tabMSG.getModel().getValueAt(i, 11) + "</Wojewodztwo>" + '\n';
                       
                       if (tabMSG.getModel().getValueAt(i, 12).equals(""))
                       {
                         JOptionPane.showMessageDialog(null,"Brak powiatu !!! dla: "+tabMSG.getModel().getValueAt(i, 5),"INFO",JOptionPane.WARNING_MESSAGE);  
                       }
                       
                       if (tabMSG.getModel().getValueAt(i, 13).equals(""))
                       {
                         JOptionPane.showMessageDialog(null,"Brak gminy !!! dla: "+tabMSG.getModel().getValueAt(i, 5),"INFO",JOptionPane.WARNING_MESSAGE);  
                       }
                       
                       msg = msg + "<Powiat>" + tabMSG.getModel().getValueAt(i, 12) + "</Powiat>" + '\n';
                       msg = msg + "<Gmina>" + tabMSG.getModel().getValueAt(i, 13) + "</Gmina>" + '\n';
                       
                       
                       if ( !tabMSG.getModel().getValueAt(i, 14).toString().equals("") )
                       msg = msg + "<Ulica  poz=\"P_22\">" + tabMSG.getModel().getValueAt(i, 14) + "</Ulica>" + '\n'; 
                       
                       if ( !tabMSG.getModel().getValueAt(i, 15).toString().equals("") )
                       msg = msg + "<NrDomu  poz=\"P_23\">" + tabMSG.getModel().getValueAt(i, 15) + "</NrDomu>" + '\n';
                       
                       if ( !tabMSG.getModel().getValueAt(i, 16).toString().equals("") )
                       msg = msg + "<NrLokalu  poz=\"P_24\">" + tabMSG.getModel().getValueAt(i, 16) + "</NrLokalu>" + '\n'; 
                       
                       
                       
                       msg = msg + "<Miejscowosc  poz=\"P_25\">" + tabMSG.getModel().getValueAt(i, 17) + "</Miejscowosc>" + '\n';
                       msg = msg + "<KodPocztowy  poz=\"P_26\">" + tabMSG.getModel().getValueAt(i, 18) + "</KodPocztowy>" + '\n';
                       msg = msg + "<Poczta>" + tabMSG.getModel().getValueAt(i, 19) + "</Poczta>" + '\n';
                       //msg = msg + "</etd:AdresPol>" + '\n';
                       msg = msg + "</AdresZamieszkania>" + '\n';
                       msg = msg + "</Podmiot2>" + '\n';
                       msg = msg + "<PozycjeSzczegolowe>" + '\n';
                       
                       msg = msg + "<P_10>1</P_10>" + '\n';
                       
                       msg = msg + "<P_28>" + tabMSG.getModel().getValueAt(i, 20).toString().replace(",", ".").replace(".00", "") + "</P_28>" + '\n';
                       
                       
                       
                       String p25 = tabMSG.getModel().getValueAt(i, 21).toString().replace(",", ".").replace(".00", "");
                       if ( p25.equals("")) p25 = "0";
                       
                       String p26 = tabMSG.getModel().getValueAt(i, 22).toString().replace(",", ".").replace(".00", "");
                       if ( p26.equals("")) p26 = "0";
                       
                       String p27 = tabMSG.getModel().getValueAt(i, 23).toString().replace(",", ".").replace(".00", "");
                       if ( p27.equals("")) p27 = "0";
                       
                       String p28 = tabMSG.getModel().getValueAt(i, 24).toString().replace(",", ".").replace(".00", "");
                       if ( p28.equals("")) p28 = "0";
                       
                       String p29 = tabMSG.getModel().getValueAt(i, 25).toString().replace(",", ".").replace(".00", "");
                       if ( p29.equals("")) p29 = "0";

                       
                       msg = msg + "<P_29>" + p25 + "</P_29>" + '\n';
                       msg = msg + "<P_30>" + p26 + "</P_30>" + '\n';
                       msg = msg + "<P_31>" + p27 + "</P_31>" + '\n';
                       msg = msg + "<P_32>" + p28 + "</P_32>" + '\n';
                       msg = msg + "<P_33>" + p29 + "</P_33>" + '\n';
                       
                       
                       String p45 = tabMSG.getModel().getValueAt(i, 41).toString().replace(",", ".").replace(".00", "");
                       if ( p45.equals("")) p45 = "0";
                       
                       String p46 = tabMSG.getModel().getValueAt(i, 42).toString().replace(",", ".").replace(".00", "");
                       if ( p46.equals("")) p46 = "0";
                       
                       String p47 = tabMSG.getModel().getValueAt(i, 43).toString().replace(",", ".").replace(".00", "");
                       if ( p47.equals("")) p47 = "0";
                       
                       String p48 = tabMSG.getModel().getValueAt(i, 44).toString().replace(",", ".").replace(".00", "");
                       if ( p48.equals("")) p48 = "0";

                       msg = msg + "<P_49>" + p45 + "</P_49>" + '\n';
                       msg = msg + "<P_50>" + p46 + "</P_50>" + '\n';
                       msg = msg + "<P_51>" + p47 + "</P_51>" + '\n';
                       msg = msg + "<P_52>" + p48 + "</P_52>" + '\n';
                       
                       
                       
                       
                       String p66 = tabMSG.getModel().getValueAt(i, 62).toString().replace(",", ".").replace(".00", "");
                       if ( p66.equals("")) p66 = "0";
                       
                       String p68 = tabMSG.getModel().getValueAt(i, 64).toString().replace(",", ".").replace(".00", "");
                       if ( p68.equals("")) p68 = "0";


                       msg = msg + "<P_70>" + p66 + "</P_70>" + '\n';
                       msg = msg + "<P_72>" + p68 + "</P_72>" + '\n';
                       
                       
                       
                       msg = msg + "<P_76>2</P_76>" + '\n';
                   
                       
                       msg = msg + "</PozycjeSzczegolowe>" + '\n';
                       msg = msg + "<Pouczenie>Za uchybienie obowiązkom płatnika grozi odpowiedzialność przewidziana w Kodeksie karnym skarbowym.</Pouczenie>" + '\n';
                       msg = msg + "</Deklaracja>" + '\n';
                       
                       System.out.println(msg);
                      
                          out2 = new BufferedWriter(new OutputStreamWriter(
                                new FileOutputStream("c:\\pit11_ADC\\out\\pit11_2016_" + plikNazwa + ".xml"),"UTF-8"));
            
                          out2.write( msg );
                          out2.close();
                          msg = "";
                       
                       
                }
                
                msgLiczbaRow.setText("Zapicałem na c:\\pit11_ADC\\out\\" );
            } catch (IOException ex) {
                Logger.getLogger(OknoGlownePit_2016.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
    }//GEN-LAST:event_butGenXMLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html          */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit_2016.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit_2016.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit_2016.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit_2016.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new OknoGlownePit_2016().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton butGenXML;
    private javax.swing.JToggleButton buttOpenFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel msgLiczbaRow;
    private javax.swing.JTable tabMSG;
    private javax.swing.JScrollPane tableMSG;
    // End of variables declaration//GEN-END:variables
}
