/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package pit11_adc.windows;

import au.com.bytecode.opencsv.CSVReader;
import java.io.*;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author k.skowronski
 */
public class OknoGlownePit extends javax.swing.JFrame {

    /**
     * Creates new form OknoGlownePit
     */
    
    
    private JFileChooser fc=new JFileChooser(".");
    private String msg;
    
    
    
    public OknoGlownePit() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttOpenFile = new javax.swing.JToggleButton();
        tableMSG = new javax.swing.JScrollPane();
        tabMSG = new javax.swing.JTable();
        msgLiczbaRow = new javax.swing.JLabel();
        butGenXML = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ADC Pit 2012");

        buttOpenFile.setText("Otwórz CSV");
        buttOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttOpenFileActionPerformed(evt);
            }
        });

        tabMSG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMSG.setViewportView(tabMSG);

        msgLiczbaRow.setText("Wierszy: 0");

        butGenXML.setText("Generuj XML");
        butGenXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGenXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableMSG, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttOpenFile)
                        .addGap(18, 18, 18)
                        .addComponent(butGenXML))
                    .addComponent(msgLiczbaRow))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttOpenFile)
                    .addComponent(butGenXML))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableMSG, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(msgLiczbaRow)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttOpenFileActionPerformed
       
        
        
        // 01 - Wskazuje ścieżeka do pliku
        
        BufferedReader file_in = null;
            msg = "";
            
            if(fc.showOpenDialog(this)!=JFileChooser.APPROVE_OPTION)
            {
                return;
            }
            File file=fc.getSelectedFile();
            
            try {
              // file_in  = new BufferedReader(new FileReader(fc.getSelectedFile().getPath()));  
 
                file_in  = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF8"));
                
            } catch (Exception e) {
                 throw new RuntimeException("Nie mogę pobrać pliku");
            }
         
            
            
            
            
            
            
            
            //02 - przesyłam dane do testArena MSG
            
            
            
            try {
            CSVReader reader = new au.com.bytecode.opencsv.CSVReader(new FileReader( file ), ';'); 
            
            List myEntries = reader.readAll();
            
            
        Object[][] dokLst = new Object[myEntries.size()][1];
        
        msgLiczbaRow.setText( "Wierszy: " + myEntries.size());
        
        for ( int i = 0; i < myEntries.size(); i++ )
        {
               Object p00         =    ((Object[]) myEntries.get(i))[0]; 
               Object p01         =    ((Object[]) myEntries.get(i))[1];
               Object p02         =    ((Object[]) myEntries.get(i))[2];
               Object p03         =    ((Object[]) myEntries.get(i))[3];
               Object p04         =    ((Object[]) myEntries.get(i))[4];
               Object p05         =    ((Object[]) myEntries.get(i))[5];
               Object p06         =    ((Object[]) myEntries.get(i))[6];
               Object p07         =    ((Object[]) myEntries.get(i))[7];
               Object p08         =    ((Object[]) myEntries.get(i))[8];
               Object p09         =    ((Object[]) myEntries.get(i))[9];
               Object p10         =    ((Object[]) myEntries.get(i))[10];
               Object p11         =    ((Object[]) myEntries.get(i))[11];
               Object p12         =    ((Object[]) myEntries.get(i))[12];
               Object p13         =    ((Object[]) myEntries.get(i))[13];
               Object p14         =    ((Object[]) myEntries.get(i))[14];
               Object p15         =    ((Object[]) myEntries.get(i))[15];
               Object p16         =    ((Object[]) myEntries.get(i))[16];
               Object p17         =    ((Object[]) myEntries.get(i))[17];
               Object p18         =    ((Object[]) myEntries.get(i))[18];
               Object p19         =    ((Object[]) myEntries.get(i))[19];
               Object p20         =    ((Object[]) myEntries.get(i))[20];
               Object p21         =    ((Object[]) myEntries.get(i))[21];
               Object p22         =    ((Object[]) myEntries.get(i))[22];
               Object p23         =    ((Object[]) myEntries.get(i))[23];
               Object p24         =    ((Object[]) myEntries.get(i))[24];
               Object p25         =    ((Object[]) myEntries.get(i))[25];
               Object p26         =    ((Object[]) myEntries.get(i))[26];
               Object p27         =    ((Object[]) myEntries.get(i))[27];
               Object p28         =    ((Object[]) myEntries.get(i))[28];
               Object p29         =    ((Object[]) myEntries.get(i))[29];
               Object p30         =    ((Object[]) myEntries.get(i))[30];
               Object p31         =    ((Object[]) myEntries.get(i))[31];
               Object p32         =    ((Object[]) myEntries.get(i))[32];
               Object p33         =    ((Object[]) myEntries.get(i))[33];
               Object p34         =    ((Object[]) myEntries.get(i))[34];
               Object p35         =    ((Object[]) myEntries.get(i))[35];
               Object p36         =    ((Object[]) myEntries.get(i))[36];
               Object p37         =    ((Object[]) myEntries.get(i))[37];
               Object p38         =    ((Object[]) myEntries.get(i))[38];
               Object p39         =    ((Object[]) myEntries.get(i))[39];
               Object p40         =    ((Object[]) myEntries.get(i))[40];
               Object p41         =    ((Object[]) myEntries.get(i))[41];
               Object p42         =    ((Object[]) myEntries.get(i))[42];
               Object p43         =    ((Object[]) myEntries.get(i))[43];
               Object p44         =    ((Object[]) myEntries.get(i))[44];
               
               

            Object[] dok = {p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20
                               ,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40
                               ,p41,p42,p43,p44};
            dokLst[i] = dok; 
            
            
           
            
            // wyswietlam
        Vector<String> tableHeaders = new Vector<String>();
        
        tableHeaders.add("00");
        tableHeaders.add("01");tableHeaders.add("02");tableHeaders.add("03");tableHeaders.add("04");tableHeaders.add("05");
        tableHeaders.add("06");tableHeaders.add("07");tableHeaders.add("08");tableHeaders.add("09");tableHeaders.add("10");
        tableHeaders.add("11");tableHeaders.add("12");tableHeaders.add("13");tableHeaders.add("14");tableHeaders.add("15");
        tableHeaders.add("16");tableHeaders.add("17");tableHeaders.add("18");tableHeaders.add("19");tableHeaders.add("20");
        tableHeaders.add("21");tableHeaders.add("22");tableHeaders.add("23");tableHeaders.add("24");tableHeaders.add("25");
        tableHeaders.add("26");tableHeaders.add("27");tableHeaders.add("28");tableHeaders.add("29");tableHeaders.add("30");
        tableHeaders.add("31");tableHeaders.add("32");tableHeaders.add("33");tableHeaders.add("34");tableHeaders.add("35");
        tableHeaders.add("36");tableHeaders.add("37");tableHeaders.add("38");tableHeaders.add("39");tableHeaders.add("40");
        tableHeaders.add("41");tableHeaders.add("42");tableHeaders.add("43");tableHeaders.add("44");
            
            tabMSG.setModel(new DefaultTableModel( ( Object[][]) dokLst, tableHeaders.toArray() ));
                    
        }             
                    //new JTable(myEntries.toArray()));
            
//            /String test = myEntries.get(1).toString();
            
            // tabelaDokumentow = myEntries.toArray();
        } catch (IOException ex) {
            Logger.getLogger(OknoGlownePit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            
            
        
        
    }//GEN-LAST:event_buttOpenFileActionPerformed

    private void butGenXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGenXMLActionPerformed
       
        
        try {
                String fileLines = null;
                Writer out2;
                String pesel = null;
                
                for ( int i = 0; i < tabMSG.getRowCount(); i++ )
                {
                       //System.out.println("START");
                           
                       pesel = tabMSG.getModel().getValueAt(i, 16).toString();
                       
                       msg =       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + '\n';
                       msg = msg + "<Deklaracja xmlns=\"http://crd.gov.pl/wzor/2011/12/12/725/\" xmlns:etd=\"http://crd.gov.pl/xml/schematy/dziedzinowe/mf/2011/06/21/eD/DefinicjeTypy/\">" + '\n';
                       msg = msg + "<Naglowek>" + '\n';
                       msg = msg + "<KodFormularza kodPodatku=\"PIT\" kodSystemowy=\"PIT-11 (19)\" rodzajZobowiazania=\"Z\" wersjaSchemy=\"1-0E\">PIT-11</KodFormularza>" + '\n';
                       msg = msg + "<WariantFormularza>19</WariantFormularza>" + '\n';
                       msg = msg + "<CelZlozenia poz=\"P_6\">1</CelZlozenia>" + '\n';
                       msg = msg + "<Rok>2012</Rok>" + '\n';
                       msg = msg + "<KodUrzedu>" + tabMSG.getModel().getValueAt(i, 2) + "</KodUrzedu>" + '\n';
                       msg = msg + "</Naglowek>" + '\n';
                       msg = msg + "<Podmiot1 rola=\"Płatnik\">" + '\n';;       
                       msg = msg + "<etd:OsobaNiefizyczna>" + '\n';
                       msg = msg + "<etd:NIP>945-19-79-723</etd:NIP>" + '\n';
                       msg = msg + "<etd:PelnaNazwa>HOTELE ADC SPÓŁKA Z OGRANICZONĄ ODPOWIEDZIALNOŚCIĄ</etd:PelnaNazwa>" + '\n';
                       msg = msg + "<etd:REGON>356571563</etd:REGON>" + '\n';
                       msg = msg + "</etd:OsobaNiefizyczna>" + '\n';
                       msg = msg + "<AdresZamieszkaniaSiedziby rodzajAdresu=\"RAD\">" + '\n';
                       msg = msg + "<etd:AdresPol>" + '\n';
                       msg = msg + "<etd:KodKraju>PL</etd:KodKraju>" + '\n';
                       msg = msg + "<etd:Wojewodztwo>MAŁOPOLSKIE</etd:Wojewodztwo>" + '\n';
                       msg = msg + "<etd:Powiat>Kraków</etd:Powiat>" + '\n';
                       msg = msg + "<etd:Gmina>Kraków</etd:Gmina>" + '\n';
                       msg = msg + "<etd:Ulica>Żabiniec</etd:Ulica>" + '\n';
                       msg = msg + "<etd:NrDomu>46</etd:NrDomu>" + '\n';
                       msg = msg + "<etd:Miejscowosc>Kraków</etd:Miejscowosc>" + '\n';
                       msg = msg + "<etd:KodPocztowy>31-215</etd:KodPocztowy>" + '\n';
                       msg = msg + "<etd:Poczta>Kraków</etd:Poczta>" + '\n';
                       msg = msg + "</etd:AdresPol>" + '\n';
                       msg = msg + "</AdresZamieszkaniaSiedziby>" + '\n';
                       msg = msg + "</Podmiot1>" + '\n';
                       msg = msg + "<Podmiot2 poz=\"P_20A\" rola=\"Podatnik\">" + '\n';
                       msg = msg + "<etd:OsobaFizyczna>" + '\n';
                       msg = msg + "<etd:PESEL>" + tabMSG.getModel().getValueAt(i, 16) + "</etd:PESEL>" + '\n';
                       msg = msg + "<etd:ImiePierwsze>" + tabMSG.getModel().getValueAt(i, 19) + "</etd:ImiePierwsze>" + '\n';
                       msg = msg + "<etd:Nazwisko>" + tabMSG.getModel().getValueAt(i, 18) + "</etd:Nazwisko>" + '\n';
                       msg = msg + "<etd:DataUrodzenia>" + tabMSG.getModel().getValueAt(i, 20) + "</etd:DataUrodzenia>" + '\n';
                       msg = msg + "</etd:OsobaFizyczna>" + '\n';
                       msg = msg + "<etd:AdresZamieszkania rodzajAdresu=\"RAD\">" + '\n';
                       msg = msg + "<etd:AdresPol>" + '\n';
                       msg = msg + "<etd:KodKraju>PL</etd:KodKraju>" + '\n';
                       msg = msg + "<etd:Wojewodztwo>" + tabMSG.getModel().getValueAt(i, 22) + "</etd:Wojewodztwo>" + '\n';
                       msg = msg + "<etd:Powiat>" + tabMSG.getModel().getValueAt(i, 23) + "</etd:Powiat>" + '\n';
                       msg = msg + "<etd:Gmina>" + tabMSG.getModel().getValueAt(i, 24) + "</etd:Gmina>" + '\n';
                       msg = msg + "<etd:Ulica>" + tabMSG.getModel().getValueAt(i, 25) + "</etd:Ulica>" + '\n';
                       msg = msg + "<etd:NrDomu>" + tabMSG.getModel().getValueAt(i, 26) + "</etd:NrDomu>" + '\n';
                       msg = msg + "<etd:NrLokalu>" + tabMSG.getModel().getValueAt(i, 27) + "</etd:NrLokalu>" + '\n'; 
                       msg = msg + "<etd:Miejscowosc>" + tabMSG.getModel().getValueAt(i, 28) + "</etd:Miejscowosc>" + '\n';
                       msg = msg + "<etd:KodPocztowy>" + tabMSG.getModel().getValueAt(i, 29) + "</etd:KodPocztowy>" + '\n';
                       msg = msg + "<etd:Poczta>" + tabMSG.getModel().getValueAt(i, 30) + "</etd:Poczta>" + '\n';
                       msg = msg + "</etd:AdresPol>" + '\n';
                       msg = msg + "</etd:AdresZamieszkania>" + '\n';
                       msg = msg + "</Podmiot2>" + '\n';
                       msg = msg + "<PozycjeSzczegolowe>" + '\n';
                       
                       msg = msg + "<P_34>" + tabMSG.getModel().getValueAt(i, 31) + "</P_34>" + '\n';
                       msg = msg + "<P_35>" + tabMSG.getModel().getValueAt(i, 32) + "</P_35>" + '\n';
                       msg = msg + "<P_36>" + tabMSG.getModel().getValueAt(i, 33) + "</P_36>" + '\n';
                       msg = msg + "<P_37>" + tabMSG.getModel().getValueAt(i, 34) + "</P_37>" + '\n';
                       msg = msg + "<P_39>" + tabMSG.getModel().getValueAt(i, 35) + "</P_39>" + '\n';
                       
                       msg = msg + "<P_55>" + tabMSG.getModel().getValueAt(i, 36) + "</P_55>" + '\n';
                       msg = msg + "<P_56>" + tabMSG.getModel().getValueAt(i, 37) + "</P_56>" + '\n';
                       msg = msg + "<P_57>" + tabMSG.getModel().getValueAt(i, 38) + "</P_57>" + '\n';
                       msg = msg + "<P_58>" + tabMSG.getModel().getValueAt(i, 39) + "</P_58>" + '\n';
                       
                       msg = msg + "<P_75>" + tabMSG.getModel().getValueAt(i, 40) + "</P_75>" + '\n';
                       msg = msg + "<P_77>" + tabMSG.getModel().getValueAt(i, 41) + "</P_77>" + '\n';
                       
                       msg = msg + "<P_81>2</P_81>" + '\n';
                   
                       
                       msg = msg + "</PozycjeSzczegolowe>" + '\n';
                       msg = msg + "<Oswiadczenie>Oświadczam, że są mi znane przepisy Kodeksu karnego skarbowego o odpowiedzialności za uchybienie obowiązkom płatnika.</Oswiadczenie>" + '\n';
                       msg = msg + "</Deklaracja>" + '\n';
                       
                       System.out.println(msg);
                      
                          out2 = new BufferedWriter(new OutputStreamWriter(
                                new FileOutputStream("c:\\pit11_ADC\\out\\pit11_2012_" + pesel + ".xml"),"UTF-8"));
            
                          out2.write( msg );
                          out2.close();
                          msg = "";
                       
                       
                }
                
                msgLiczbaRow.setText("Zapicałem na c:\\pit11_elektro\\out\\" );
            } catch (IOException ex) {
                Logger.getLogger( OknoGlownePit.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
    }//GEN-LAST:event_butGenXMLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html          */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoGlownePit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new OknoGlownePit().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton butGenXML;
    private javax.swing.JToggleButton buttOpenFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel msgLiczbaRow;
    private javax.swing.JTable tabMSG;
    private javax.swing.JScrollPane tableMSG;
    // End of variables declaration//GEN-END:variables
}
